name: Validate AsyncaPI spec file
on:
  pull_request: 
    branches: [ master ]

env:
  CANCEL_WORKFLOW: false
jobs:
  asyncapi-present:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Current Branch
          uses: actions/checkout@master
          with:
            ref: ${{ github.ref }}
              
        - name: Install asycnapi cli
          run: npm install -g @asyncapi/cli 
            
      # Get all files in commit
        - id: files
          uses: jitterbit/get-changed-files@v1

        - name: Check if an AsycnAPI file is in commit
          run: |
            asyncapiFiles=()
            for changed_file in ${{ steps.files.outputs.all }}
            do
              if [[ ( ${changed_file} == *.yaml ) || ( ${changed_file} == *.yml ) || ( ${changed_file} == *.json ) ]]
              then
                asyncapi validate ${changed_file} &> check.txt
                # Check if the file is an asyncapi spec
                if ! grep -q "field is missing." check.txt; then
                  asyncapiFiles+=("$changed_file")
                  echo "This is an asyncapi file"
                fi
              fi
            done
            if [ ${#asyncapiFiles[@]} -eq 0 ]; then
              echo "Cancel workflow. No file found!"
              echo "CANCEL_WORKFLOW=true" >> $GITHUB_ENV
            fi

        - name: Cancel Workflow if no asyncAPI file present in PR
          if: env.CANCEL_WORKFLOW == 'true'
          uses: andymckay/cancel-action@0.2
  
  validate-asyncapi:
    runs-on: ubuntu-latest
    needs: asyncapi-present
    steps:

      - name: Checkout Current Branch
        uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}
      
      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Install asycnapi cli
        run: npm install -g @asyncapi/cli@0.22.2

      # Get all files in PR
      - id: async_spec_present
        uses: jitterbit/get-changed-files@v1

      # Validate AsyncAPI file
      - name: Validate asyncapi spec file using OS validator
        run: |
          asyncapiFiles=()
          for changed_file in ${{ steps.async_spec_present.outputs.all }}
          do
            if [[ ( ${changed_file} == *.yaml ) || ( ${changed_file} == *.yml ) || ( ${changed_file} == *.json ) ]]
            then
              asyncapi validate ${changed_file} &> check.txt
              # Check if the file is an asyncapi spec
              if grep -q -v "ValidationError" "check.txt"; then
                exit 1
              fi
            fi
          done
      
      # Import spec file to EP in checkmode
      - name: Attempt an import to EP
        run: echo "attempting to import the file to EP"
        