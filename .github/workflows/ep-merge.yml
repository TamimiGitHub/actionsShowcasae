name: Process post merge
on:
  push: 
    branches: [ master ]

env:
  ASYNCAPI_FILE_PATH: 'none'
  CANCEL_WORKFLOW: 'true'

jobs:
  asyncapi-present:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          CONTEXT: ${{toJson(github)}}
        run: | 
          echo "Repo --> ${{ github.repository }}"
          echo "REPO_BRANCH --> ${{ github.base_ref }}"
          echo "$CONTEXT"
          
    # Get all files in commit
      - id: async_spec_present
        uses: jitterbit/get-changed-files@v1

      - name: Check if AsycnAPI file in commit
        run: |
          for changed_file in ${{ steps.async_spec_present.outputs.all }}; do
            asyncapi validate ${changed_file} &>> output.txt

            if grep -q "successfully validated!" "output.txt"; then
              export ASYNCAPI_FILE_PATH=${changed_file}
              export CANCEL_WORKFLOW='false'
            fi
          done
      - name: Cancel Workflow if no asyncAPI file present in PR
        if: env.CANCEL_WORKFLOW == 'true' 
        uses: andymckay/cancel-action@0.2

  import-asyncapi-file:
    needs: asyncapi-present
    runs-on: ubuntu-latest
    steps:
      - name: Import AsyncAPI spec file to EP
        run: echo "Importing file"

  sync-asyncapi-with-ep:
    needs: import-asyncapi-file
    runs-on: ubuntu-latest
    steps:
      - name: Sync AsyncAPI spec file with EP
        run: echo "Synching file with EP"
      - name: Committing AsyncAPI spec file into repo
        run: echo "Commit file back to repo"
  
  # Trigger awx Jenkins job if an asyncapi spec file is present in commit merge
  trigger-jenkins:
    needs: asyncapi-present
    runs-on: ubuntu-latest
    steps:
      - name: Install asycnapi cli
        run: npm install -g @asyncapi/cli 

      - name: REST call to Jenkins
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://${{ secrets.JENKINS_HOST }}/job/build-awx-asyncapi-rest/buildWithParameters'
          method: 'POST'
          username: ${{ secrets.JENKINS_USER }}
          password: ${{ secrets.JENKINS_PASSWORD }}
          customHeaders: '{"Content-Type": "application/x-www-form-urlencoded"}'
          data: '{"REPO_HTTP_URL": ${{ github.event.base.repo.html_url }}, "REPO_BRANCH": ${{ github.base_ref}}, "ASYNCAPI_FILE": ${{env.ASYNCAPI_FILE_PATH}}, "BUILD_ENV": "test"}'