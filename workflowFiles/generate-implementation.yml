# This workflow will be triggered via a repository dispatch 
# The body of the POST request is accessed by ${{ github.event.client_payload.<param>}} where param is the JSON body parameters
# The event_type parameter should reflect the repository_dispatch type.

# A sample POST payload looks like this:

# {
#     "event_type": "trigger-event",
#     "client_payload": {
#         "param1": "18273461237",
#         "param2": "true"
#     }
# }

# Example trigger for this workflow execution using CURL: 

# run: |
#   id="962368b5c27b7ec5ecfcb4ed8f8c57adb52a8442"
#   curl -X POST -u "${{ github.actor }}:${{ secrets.WORKFLOW_PAT }}" \
#     -H "Accept: application/vnd.github.everest-preview+json"  \
#     -H "Content-Type: application/json" \
#     https://api.github.com/repos/${{ secrets.INFRA_REPO }}/dispatches \
#     --data "{\"event_type\":\"trigger-event\",\"client_payload\":{\"id\":\"$id\", \"unit\":false,\"integration\":true}}"

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# To get started, configure the following in your repos secrets https://docs.github.com/en/actions/security-guides/encrypted-secrets

name: generate-implementation-configuration

on:
  repository_dispatch:
    types: ["trigger-event"]

env:
  # COS: ${{ github.event.solace.cos }}
  # QUEUE_NAME: ${{ github.event.solace.queueName }}
  # ACCESS_TYPE: ${{ github.event.solace.accessType }}
  # SUB: ${{ github.event.solace.sub }}
  SPEC: ${{ github.event.client_payload.asyncapi }}

jobs:
  generate-implementation-file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Current Branch
        uses: actions/checkout@master

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'      

      - name: Run generate implementation script with AsyncAPI spec as input parameter
        run: |
          node scripts/generate-implementation.js $SPEC
